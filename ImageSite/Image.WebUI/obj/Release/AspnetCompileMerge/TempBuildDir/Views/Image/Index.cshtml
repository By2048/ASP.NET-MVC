@model Image.WebUI.Models.ImageIndexModel

@using PagedList.Mvc;

@{
    ViewBag.Title = "Image Index";
}


<script type="text/javascript">
    //改变透明度参数：图片对象，透明度：1-100的值
    function setAlpha(imgObj, opacityValue) {
        imgObj.filters.alpha.opacity = parseInt(opacityValue);
    }
    //图片的显示大小[以宽度来限制]
    function DrawImageW(imgObj, widthValue) {
        var image = new Image();
        image.src = imgObj.src;
        if (image.width > 0 && image.height > 0) {
            if (image.width >= widthValue) {
                imgObj.width = widthValue;
                imgObj.height = (image.height * widthValue) / image.width;
            } else {
                imgObj.width = image.width;
                imgObj.height = image.height;
            }
        }
    }
    //图片的显示大小[以高度来限制]
    function DrawImageH(imgObj, heightValue) {
        var image = new Image();
        image.src = imgObj.src;
        if (image.width > 0 && image.height > 0) {
            if (image.height >= heightValue) {
                imgObj.height = heightValue;
                imgObj.width = (image.width * heightValue) / image.height;
            } else {
                imgObj.width = image.width;
                imgObj.height = image.height;
            }
        }
    }
    //图片的显示大小[宽高同时限制]
    function DrawImage(imgObj, widthValue, heightValue) {
        var image = new Image();
        image.src = imgObj.src;
        if (image.width > 0 && image.height > 0) {
            if (image.height > heightValue || image.width > widthValue) {
                var h = 0, w, wflg = false;
                if (image.height > heightValue)
                    wflg = true;
                if (wflg) {
                    w = widthValue;
                    h = (image.height * widthValue) / image.width;
                }
                if (h == 0 || h > heightValue) {
                    h = heightValue;
                    w = (image.width * heightValue) / image.height;
                }
                //alert(w)
                //alert(h)
                imgObj.width = w;
                imgObj.height = h;
            } else {
                imgObj.width = image.width;
                imgObj.height = image.height;
            }
        }
    }
    function zoomImg(imgObj) {
        var zoom = parseInt(imgObj.style.zoom, 10) || 100; zoom += event.wheelDelta / 12;
        if (zoom > 0)
            imgObj.style.zoom = zoom + '%';
        return false;
    }

</script>

<style>
    .content_right {
        float: right;
        height: 750px;
        margin-right: 15px;
        width: 850px;
    }

    .show_image {
        display: table;
        width: 900px;
        height: 700px;
        text-align: center;
    }

        .show_image span {
            display: table-cell;
            vertical-align: middle;
        }

        .show_image image {
            vertical-align: middle;
        }

    .image_page_list {
        width: 850px;
        height: 50px;
        text-align: center;
        bottom: 0;
        position: absolute;
    }

    .image_page_list .pagination-container{
         height:50px;
     }
</style>


<div class="content_right">
    <div class="show_image">
        @foreach (var item in Model.PagedListImage)
        {
            <span><img src="@item.Path" alt="@item.Name" class="img-thumbnail" onload="javascript: DrawImage(this,900,700)" /></span>
        }
    </div>
    <div class="image_page_list">
        @Html.PagedListPager(Model.PagedListImage, page => Url.Action("Index", "Home",
                new { folderPage = ViewBag.FolderPage, folderId = ViewBag.FolderId, imagePage = page }))
    </div>
</div>



@*<h2>@ViewBag.FolderPage</h2>
<h2>@ViewBag.FolderId</h2>
<h2>@ViewBag.ImagePage</h2>*@